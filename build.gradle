plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.assessment'
version = '0.0.1-SNAPSHOT'
description = 'BookLibrary'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register("composeUp", Exec) {
    group = "docker"
    description = "Run docker-compose up"
    commandLine "docker-compose", "up", "-d"
}

tasks.register("composeDown", Exec) {
    group = "docker"
    description = "Run docker-compose down"
    commandLine "docker-compose", "down"
}

tasks.register("composeUpAndRun") {
    group = "application"
    description = "Start docker-compose and run Spring Boot app"

    dependsOn("composeUp", "bootRun")
}

tasks.named('test') {
    useJUnitPlatform()
}
